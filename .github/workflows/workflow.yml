name: Deploy Setting

on:
  push:
    branches:
      - main # 이 브랜치에 푸시하면 배포가 실행됨


jobs:
  deploy:
    runs-on: ubuntu-24.04
    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v4
      # 2. Java setting(러너에서 빌드용)
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      # 3. Gradle 로 빌드(# 테스트 제외하고 JAR 생성)
      - name: Build with Gradle
        run: | 
          chmod +x ./gradlew
          ./gradlew build -x test
      # 4. SSH 로 EC2에 배포
      - name: Deploy to EC2
        env:
          PRIVATE_KEY: ${{ secrets.SERVER_PEMKEY }}
          HOST: ${{secrets.SERVER_HOST}}
          USER: ${{secrets.SERVER_USER}}
        run: |
          # SSH 키 설정
          echo "$PRIVATE_KEY" > private_key
          chmod 600 private_key
          
          # JAR 파일 전송
          rsync -avz --exclude '*-plain.jar' -e "ssh -i private_key -o StrictHostKeyChecking=no" ./build/libs/*.jar $USER@$HOST:/home/$USER/app/
          
          # EC2에서 실행
          ssh -i private_key -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $USER@$HOST "
          echo 'SSH connection successful'
          
          # 디렉토리 확인 or 생성
          ls -lh /home/$USER/app/
          mkdir -p /home/$USER/app/
          
          # 최신 JAR 파일 찾기
            JAR_FILE=$(ls -t /home/$USER/app/*.jar | head -n 1)
            if [ -z "$JAR_FILE" ]; then
              echo 'No JAR file found in /home/$USER/app/'
              exit 1
            fi
          
          # 기존 Java 프로세스 종료
          pkill -f 'java -jar /home/$USER/app/*.jar' || echo 'No existing process found'
          
          # 새 프로세스 시작
          nohup java -jar "$JAR_FILE" > /home/$USER/app/app.log 2>&1 &
          pid=$!
          echo "App started with PID: $pid"
          sleep 5
          
          # 프로세스 상태 및 로그 확인
          if ps -p $pid > /dev/null; then
          echo 'Process is running'
          echo 'Last 10 lines of app.log:'
          tail -n 10 /home/$USER/app/app.log
          else
          echo 'Process failed to start'
          echo 'Last 10 lines of app.log:'
          tail -n 10 /home/$USER/app/app.log
          exit 1
          fi
          "
          echo "Deployment finished"